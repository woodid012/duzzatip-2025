name: Update AFL Stats
on:
  schedule:
    # Melbourne EST times (UTC+10/11 depending on daylight savings)
    # For simplicity, assuming UTC+10 (so subtract 10 hours for UTC time)
    - cron: '00 21 * * 1'   # 7:00 AM Tuesday in Melbourne (21:00 UTC Monday)
    - cron: '00 21 * * 2'   # 7:00 AM Wednesday in Melbourne (21:00 UTC Tuesday)
    - cron: '00 21 * * 3'   # 7:00 AM Thursday in Melbourne (21:00 UTC Wednesday)
    - cron: '00 13 * * 4'   # 11:00 PM Thursday in Melbourne (13:00 UTC)
    - cron: '00 13 * * 5'   # 11:00 PM Friday in Melbourne (13:00 UTC)
    - cron: '30 9 * * 6'    # 7:30 PM Saturday in Melbourne (9:30 UTC)
    - cron: '00 13 * * 6'   # 11:00 PM Saturday in Melbourne (13:00 UTC)
    - cron: '00 8 * * 0'    # 6:00 PM Sunday in Melbourne (8:00 UTC)
    - cron: '00 13 * * 0'   # 11:00 PM Sunday in Melbourne (13:00 UTC)
    - cron: '00 8 * * 1'    # 6:00 PM Monday in Melbourne (8:00 UTC)
    - cron: '00 13 * * 1'   # 11:00 PM Monday in Melbourne (13:00 UTC)
  workflow_dispatch:  # Allow manual trigger for testing

jobs:
  update-stats:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          cd src/app/scripts
          npm ci || npm install

      - name: Create .env file
        run: |
          cd src/app/scripts
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" > .env
          
      - name: Run stats update script
        id: update-script
        run: |
          cd src/app/scripts
          node update-afl-stats.js
          # Set output variable based on script output
          if grep -q "PROCESSED_FIXTURES=true" <<< "$(cat /tmp/script_output.txt)"; then
            echo "CHANGES_MADE=true" >> $GITHUB_OUTPUT
          else
            echo "CHANGES_MADE=false" >> $GITHUB_OUTPUT
          fi
        
      - name: Commit changes if fixtures were updated
        if: steps.update-script.outputs.CHANGES_MADE == 'true'
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"
          git add src/app/scripts/processed-games.json
          git commit -m "Update processed games record [skip ci]"
          git push